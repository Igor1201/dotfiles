// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "shift+cmd+k",
        "command": "paredit.slurpSexpForward",
        "when": "calva:activated && calva:pareditValid && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+right",
        "command": "-paredit.slurpSexpForward",
        "when": "calva:activated && calva:pareditValid && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "shift+cmd+a",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "alt+cmd+l",
        "command": "calva-fmt.alignCurrentForm",
        "when": "calva:activated && editorTextFocus && !editorReadOnly && !hasOtherSuggestions && !suggestWidgetVisible && editorLangId == 'clojure'"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-calva-fmt.alignCurrentForm",
        "when": "calva:activated && editorTextFocus && !editorReadOnly && !hasOtherSuggestions && !suggestWidgetVisible && editorLangId == 'clojure'"
    },
    {
        "key": "alt+up",
        "command": "paredit.sexpRangeExpansion",
        "when": "calva:activated && calva:pareditValid && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+g",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+left",
        "command": "-paredit.barfSexpForward",
        "when": "calva:activated && calva:pareditValid && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "alt+cmd+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "cmd+r",
        "command": "references-view.find",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "shift+cmd+o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "shift+cmd+9",
        "command": "calva.runTestUnderCursor",
        "when": "calva:connected"
    },
    {
        "key": "shift+cmd+0",
        "command": "calva.runNamespaceTests",
        "when": "calva:connected"
    },
    {
        "key": "alt+right",
        "command": "paredit.forwardSexp",
        "when": "calva:pareditValid && !panelFocus && !sideBarFocus && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-paredit.forwardSexp",
        "when": "calva:pareditValid && !panelFocus && !sideBarFocus && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "alt+left",
        "command": "paredit.backwardSexp",
        "when": "calva:pareditValid && !panelFocus && !sideBarFocus && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-paredit.backwardSexp",
        "when": "calva:pareditValid && !panelFocus && !sideBarFocus && paredit:keyMap =~ /original|strict/"
    },
    {
        "key": "cmd+'",
        "command": "multiCommand.raise",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+p",
        "command": "calva.evalCurrentFormInREPLWindow",
        "when": "calva:connected"
    },
    {
        "key": "ctrl+alt+c ctrl+alt+e",
        "command": "-calva.evalCurrentFormInREPLWindow",
        "when": "calva:connected"
    }
]